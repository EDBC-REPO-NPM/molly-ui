
/* Style modifiers
 ========================================================================== */
.uk-text-lead {
  font-size: 1.5rem;
  line-height: 1.5;
  color: #333;
}
.uk-text-meta {
  font-size: 0.875rem;
  line-height: 1.4;
  color: #999;
}
.uk-text-meta a {
  color: #999;
}
.uk-text-meta a:hover {
  color: #666;
  text-decoration: none;
}
/* Size modifiers
 ========================================================================== */
.uk-text-small {
  font-size: 0.875rem;
  line-height: 1.5;
}
.uk-text-large {
  font-size: 1.5rem;
  line-height: 1.5;
}
.uk-text-default {
  font-size: 16px;
  line-height: 1.5;
}
/* Weight modifier
 ========================================================================== */
.uk-text-light {
  font-weight: 300;
}
.uk-text-normal {
  font-weight: 400;
}
.uk-text-bold {
  font-weight: 700;
}
.uk-text-lighter {
  font-weight: lighter;
}
.uk-text-bolder {
  font-weight: bolder;
}
/* Style modifier
 ========================================================================== */
.uk-text-italic {
  font-style: italic;
}
/* Transform modifier
 ========================================================================== */
.uk-text-capitalize {
  text-transform: capitalize !important;
}
.uk-text-uppercase {
  text-transform: uppercase !important;
}
.uk-text-lowercase {
  text-transform: lowercase !important;
}
/* Decoration modifier
 ========================================================================== */
.uk-text-decoration-none {
  text-decoration: none !important;
}
/* Color modifiers
 ========================================================================== */

/* TODO: css compiled */
/°(()=>{
  const data = ("mute,danger,success,default,primary,warning,secondary").split(',');
  const result = new Array();
  for( var i in data ){
    result.push(`
      .uk-text-${data[i]} { color: var(--color-${data[i]}) !important; }
      .uk-text-${data[i]}>:not([class*='uk-text']){ color: var(--color-${data[i]}) !important; }
    `);
  } return result.join('\n');
})();°/

/°
(()=>{
  const data = 'top|middle|bottom|baseline'.split('|');
  return data.map((x,i)=>`
    .uk-text-${x} { vertical-align: ${x} !important; }
    .uk-text-${x} >:not([class*='uk-text']) { vertical-align: ${x} !important; }
  `).join('');
})()
°/

/°
(()=>{
  const data = 'left|right|center|justify'.split('|');
  return data.map((x,i)=>`
    .uk-text-${x} { text-align: ${x} !important; }
    .uk-text-${x} >:not([class*='uk-text']) { text-align: ${x} !important; }
  `).join('');
})()
°/

/* TODO: css compiled */

/* Background modifier
 ========================================================================== */
/*
 * 1. The background clips to the foreground text. Works in all browsers.
 * 2. Default color is set to transparent.
 * 3. Container fits the text
 * 4. Style
 */
.uk-text-background {
  display: inline-block;
  /* 1 */
  -webkit-background-clip: text;
  /* 2 */
  color: transparent !important;
  /* 3 */
  background-color: var(--color-primary);
}
/* Alignment modifiers
 ========================================================================== */

/* Phone landscape and bigger */
@media (min-width: 640px) {
  /°
  (()=>{
    const data = 'left|right|center|justify'.split('|');
    return data.map((x,i)=>`
      .uk-text-${x}\\@s { text-align: ${x} !important; }
      .uk-text-${x}\\@s >:not([class*='uk-text']) { text-align: ${x} !important; }
    `).join('');
  })()
  °/
  /°
  (()=>{
    const data = 'top|middle|bottom|baseline'.split('|');
    return data.map((x,i)=>`
      .uk-text-${x}\\@s { vertical-align: ${x} !important; }
      .uk-text-${x}\\@s >:not([class*='uk-text']) { vertical-align: ${x} !important; }
    `).join('');
  })()
  °/
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  /°
  (()=>{
    const data = 'left|right|center|justify'.split('|');
    return data.map((x,i)=>`
      .uk-text-${x}\\@m { text-align: ${x} !important; }
      .uk-text-${x}\\@m >:not([class*='uk-text']) { text-align: ${x} !important; }
    `).join('');
  })()
  °/
  /°
  (()=>{
    const data = 'top|middle|bottom|baseline'.split('|');
    return data.map((x,i)=>`
      .uk-text-${x}\\@m { vertical-align: ${x} !important; }
      .uk-text-${x}\\@m >:not([class*='uk-text']) { vertical-align: ${x} !important; }
    `).join('');
  })()
  °/
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  /°
  (()=>{
    const data = 'left|right|center|justify'.split('|');
    return data.map((x,i)=>`
      .uk-text-${x}\\@l { text-align: ${x} !important; }
      .uk-text-${x}\\@l >:not([class*='uk-text']) { text-align: ${x} !important; }
    `).join('');
  })()
  °/
  /°
  (()=>{
    const data = 'top|middle|bottom|baseline'.split('|');
    return data.map((x,i)=>`
      .uk-text-${x}\\@l { vertical-align: ${x} !important; }
      .uk-text-${x}\\@l >:not([class*='uk-text']) { vertical-align: ${x} !important; }
    `).join('');
  })()
  °/
}

/* Large screen and bigger */
@media (min-width: 1600px) {
  /°
  (()=>{
    const data = 'left|right|center|justify'.split('|');
    return data.map((x,i)=>`
      .uk-text-${x}\\@xl { text-align: ${x} !important; }
      .uk-text-${x}\\@xl >:not([class*='uk-text']) { text-align: ${x} !important; }
    `).join('');
  })()
  °/
  /°
  (()=>{
    const data = 'top|middle|bottom|baseline'.split('|');
    return data.map((x,i)=>`
      .uk-text-${x}\\@xl { vertical-align: ${x} !important; }
      .uk-text-${x}\\@xl >:not([class*='uk-text']) { vertical-align: ${x} !important; }
    `).join('');
  })()
  °/
}

/*
 ========================================================================== */
/*
 * Prevent text from wrapping onto multiple lines
 */
.uk-text-nowrap {
  white-space: nowrap;
}
/*
 * 1. Make sure a max-width is set after which truncation can occur
 * 2. Prevent text from wrapping onto multiple lines, and truncate with an ellipsis
 * 3. Fix for table cells
 */
.uk-text-truncate {
  /* 1 */
  max-width: 100%;
  /* 2 */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
/* 2 */
th.uk-text-truncate,
td.uk-text-truncate {
  max-width: 0;
}
/*
 * Wrap long words onto the next line and break them if they are too long to fit.
 * 1. Make it work with table cells in all browsers.
 * Note: Not using `hyphens: auto` because it hyphenates text even if not needed.
 */
.uk-text-break {
  overflow-wrap: break-word;
}
/* 1 */
th.uk-text-break,
td.uk-text-break {
  word-break: break-word;
}
